Cloud Computing:

Server Composed of:
	Compute: CPU
	Memory: RAM
	Storage Data
	Database: Store Data in Structure Way
	Network: Routers, switch, DNS server.

Network: Cable, Routers and servers connected with each other.
Router: A networking device that forwards data packets between computer
	network. They know where to send your packets on the internet.
Switch: Takes a packet and send it to the correct server/client on your
	network


Problems with tradional IT approach:	
	Pay for rent for the data center
	Adding and replacing hardware takes time
	Scaling is limited
	Deal with disasters

Cloud Computing:
	-> On demand deliver of compute power, database storage, 	application and other IT resources,
	-> Pay as you go pricing 
	-> Provision right type and size of computing resource you need
	-> Can access as many resources as you need, almost instantly.
	-> Simple way to access servers, storage, databases and set of 
	   application services.
	-> Amazon web service owns and maintains the network connected hardware required for those applications service you provision and use what you need via web application
	

Deployment Models of the Cloud:
	Private Cloud
		Cloud Service used by a single organization
		Not Exposed to the public
		Complete Control
		Security for the sensitive applications
		Meet specific business needs
	
	Public Cloud:
		Cloud resources owned and operated by third party
		Six advantages of Cloud Computing
	
	Hybrid Cloud:
		Keep some servers on premises and extend some capabilities to 		the cloud.
		Control over sensitive assets in your private infrastructure.
		Flexibility and cost effectiveness of the public cloud.

Five Characteristics of the Cloud Computing:
ShortCut:
	On Demand Self Service:
		-> Users can provision resources and use them without interaction from the service of the provider.

	Broad Netowork access:
		-> Resource available over netowork and can be accessed by the diverse client platforms.

	Multi-Tenancy and resource pooling:
		-> Multiple customer can share the same infrastruture and applications with the security and privacy.
		-> Multiple customers are serviced from the same physical resource.

	Rapid Elasticity and Scalability:
		-> Automatically and quicly acquire and dispose resources when needed.
		-> Quickly and easily scale based on demand
	Measured Service:
		-> Usage is measured, users pay correctly for what they have used.


Six Advantages of Cloud Computing:
	Benefit in operational Expense :
		Pay as you go modal
	Benefit from massive economics of scale:
		Prices are reduced as AWS is more efficient due to large scale.
	Stop Guessing capacity:
		Scale based on actual measured usage.
	Increase speed and agility:
	Stop spending money running and maintaining data centers.
	Go Global in minutes

Problems Solved: 
	Flexibility:        change resources types when needed.
	Cost-Effectiveness: pay as you go
	Scalability:        accomodate larger loads.
	Elasticity:         ability to scale out and scale in when needed.
	High Availablity&	  build across data centers.
	Fauly Toleance

Types of Cloud Computing:

	1) Intrastructure as a Service(IaaS):
		Provide building blocks for the Cloud IT
		Provides networking, computers, data storage space.
		Highest level of flixibility
		Easy parallel with tradional on-premises IT
		Eg: EC2
	2) Platfrom as a Service(PaaS):
		Removes the need for your organization to manage the underlying
		infrstructure.
		Focus on the deployment and management of your applications.
		Eg: Elastic BeanStalk(on AWS)
	3) Software as a Service(SaaS):
		Completed product that is run and managed by the service provider.
		Eg: Many AWS services(eg: Rekognition for Machine Learning)
	
Management of Services:


On-Premises		IaaS			PaaS			SaaS
-----------------------------------------------------------------------
Application		Application		Application		APPLICATION
Data			Data			Data			DATA
Runtime		Runtime		RUNTIME		RUNTIME
Middleware		Middleware		MIDDLEWARE		MIDDLEWARE		
o/s			o/s			O/S			O/S
Virtualization	VIRTUALIZATION	VIRTUALIZATION	VIRTUALIZATION
Servers		SERVERS		SERVERS		SERVERS
Storage		STORAGE		STORAGE		STORAGE
Networking		NETWORKING		NETWORKING		NETWORKING
							
							LoweCase are managed by us
							Uppercase are Managed by AWS
Pricing for the Cloud:
	3 Pricing fundementals of AWS are as follows:
	
	1) Compute:
		Pay for the Compute time
	2) Storage:
		Pay for the data stored in the cloud.
	3) Data Transfer OUT of the Cloud.
		Data transfer IN is free.

Evolution of AWS:
	1) Initially Launched the SQS service(2003) then moved to S3 and EC2(2004)
	2)Launched in Europe.


AWS Use Cases:
	Enterprise IT, Backup and Storage, Big Data Analytics.
	Website hosting, Mobile & Social Apps
	Gaming

Global Infrastruture:
	AWS Regions
	AWS Availability Zones
	AWS Data Centers
	AWS Edge Locations

------------------------------------------------------------------------
AWS Regions:
	AWS has Regions all around the world.
	Names can be us-east-1, eu-west-3...
	A region is a cluster of data centers.
	Most AWS services are region scoped.

How to choose an AWS Region:
	1) Compliance with the data governance and legal requirements:
		Data never leaves a region without your explicit permission.
		Some country has laws that data shouldn't leave their country so in such cases same region needs to be choosed.

	2) Proximity to Customers: 
		-> reduced latency
		-> Choose the region where most of our customers coming to visit a website.
	3) Available Services within a Region:
		-> New services and new features arent available in every region.
	4) Pricing: Pricing varies region to region.

------------------------------------------------------------------------

AWS Availablity Zones:
	-> Each regions has many availability zones usually 3 , min is 3, max is 6.
	-> Eg: ap-southeast-2 Region has 2 AZs
			ap-southeast-2a, ap-southeast-2b, ap-southeast-2c 
	-> Each AZ's have one or more discrete data centers with reduntant power, networking and connectivity.
	-> They are seperate from each other so they are isolated from disasters.
	-> They are connected with high bandwidth, ultra low latency networking.

------------------------------------------------------------------------
AWS Point of Presence(Edge Locations):
-> Amazon has 216 points of presence (205 edge locations ) in 84 cities across 42 countries.
-> Content delivied to the end user with lower latency.

Tour of AWS Console:

AWS has Global Services:
	1) IAM
	2) Route 53(DNS Service)
	3) CloudFront (Content Delivery Network)
	4) WAF (Web Application Firewall)
	
AWS Services has Region Scoped:
	1) Amazon EC2(Infrastructure as a Service)
	2) Elastic BeanStalk(PaaS)
	3) Lambda (Function as a Service)
	4) Rekognition (Software as a Service)
	
Region Table: 
https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/

Shared Responsibility Model:(IMP)
	Defines the Responsibility for security in the AWS Cloud.
	Refer the Model:	
	https://aws.amazon.com/compliance/shared-responsibility-model/

	Customer has the following responsibility:
		1) Customer Data, Platform, Application, Access Management
		2) OS, Network, Firewall Configurations
		3) Client Side Data, Server Side Encryption, Netowork Traffic protection.

------------------------------------------------------------------------

IAM(Identity Access Management), Global Service
	-> Root Account created by default, shouldn't be used or shared.
	-> You only want to use the root account to create your first IAM user, and for a few account and service management tasks. 
	-> For every day and administration tasks, use an IAM user with permissions.
	-> Users are the people within your organization, and can be grouped.
	-> Group only contains users, not other groups.
	-> Users is not mandatory to belong to the group and user can belong to the multiple groups.


IAM: Permissions
	-> Users or Groups can be assigned JSON documents called policies.
	-> These policies define the permissions of the users.
	-> In AWS you can apply the least privilege principle: dont five 
	   more permissions than a user needs.

IAM Policies Inheritance:
	-> One user can belong to the multiple Groups and inherit thier policies.

IAM Policies Structure:
	-> Version: Policiy Language Version, always include "2012-10-17"
	-> Id: as identifier for the policy(optional)
	-> Statement:
		=> Sid: an identifier for the statement(optional)
		=> Effect: whether the statement allows or denies access
				(Allow, Deny)
		=> Principal: account/user/role to which this policy applied to
		=> Action: list of actions this policy allows or denies
			  Eg: S3:Getobject, S3:PutObject
		=> Resource: list of resource to which the actions applied to
		=> Condition: conditions for when this policy is in effect(optional)


IAM - Password Policy:
	Strong Passwords = Higher Security for your account.
	In AWS, you can setup a password Policy:
		1) Set a minimum length
		2) Require specific password length
			Include uppercase, lowercase, number and non-alpha chars
		3) Allow all IAM users to change thier own passwords.
		4) Require uses to change password after some time.
		5) Prevent password reuse.

Multi Factor Authentication (MFA):
	-> Users have access to your account and can possibly delete or create a multiple resources.
	-> You want to protect root account and IAM users
	-> MFA = password you know + security device you own.

	MFA Device Options:
		1) Virtual MFA devices:
			Google Authenticator, Authy(multi device)
			Support for multiple tokens on a single device.

		2) Universal 2nd Factor(U2F) Security Key:
			Device that is inserted in to laptop and then allows to do a signin.
			YubiKey by Yubico(3rd Party)
			Support for multiple root and IAM users using a single
security key..
		3) Othe Hardware Device.

AWS access have three options:
	1) AWS Management Console(protected by password + MFA)
	2) AWS CLI: Protected by access keys
	3) AWS SDK(Software Developer Kit): for code protected by Access keys.(calling AWS apis in our application)
	
	Access Key ID
	Access Secrete Key

AWS CLI:
	AWS CLI is used to enable you to interact AWS services using command in the command line shell
	Direct Access to piublic API's of AWS services.

AWS SDK:
	-> AWS Software development Kit
	-> Language Specific API
	-> Enables you to access and manage AWS services programatically.
	-> Embedded within you application
	-> Supports 
		SDK's JS, Python, PHP, Java, GO
		Mobile SDK's (Android, IOS)
		IOT Devices (Embedded, C, Ardiono)

AWS Cloud Shell:
	It is an terminal in an AWS cloud which is free to use.
	Available in some regions.
	
IAM Roles for the Services:
	Some AWS services will need to perform action on your behalf.
	To do so we will assign permissions to AWS services with IAM Roles.
	Common Roles:
		EC2 Instance Roles
		Lambda Function Roles
		Roles for the cloud formation

IAM Security Tools:
	IAM Credentials report lists all your account's users and the status of their various credentials. 
	The other IAM Security Tool is IAM Access Advisor. 
	It shows the service permissions granted to a user and when those services were last accessed.

	1) IAM Credentials Report(account-level):
		-> Report that lists all your account users and the status of their various credentials.
	
	2) IAM Access Advisor(user-level):
		-> Access advisor shows the service permissions granted to a used and when those services were last accessed.
		-> You can use this information to revise your policies.
	
IAM Guidelines and Best Pratices:
	Dont use root account except for AWS account setup.
	One Physical User = One AWS user.
	Assign User to groups and assign permissions to the groups.
	Create strong password policy
	Use and enforce MFA
	Create and use roles for giving permissions to AWS services
	Use Access keys for programatically Access
	Audit permissions of your account with IAM Credentials Report
	Never Share IAM users and Access Keys

Shared Responsibility Model for IAM

	AWS Responsisbility
-> Infrastructure (global network security)
-> Configuration and vulnerabilirt analysis
-> Compliance Validation

	Our Resposibility
-> Users, Groups, Roles and Policies management and monitoring
-> Enable MFA
-> Rotate all your keys often
-> Use IAM tools to apply appropiate permissions
-> Analyze access patterns and review permissions


Summary:
	Users: Mapped to a physical user has password for AWS console
	Groups: contains users only
	Policies: JSON document that outlines permissions for users or groups.
	Roles: for EC2 instance or AWS services.
	Security: MFA + Password Policy






	


	

	
	


	

	

	

			
	




	
		



	



	



















	